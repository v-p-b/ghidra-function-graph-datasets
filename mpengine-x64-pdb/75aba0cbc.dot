digraph _Append_range_unchecked<class_std::_List_unchecked_const_iterator<class_std::_List_val<struct_std::_List_simple_types<struct_std::pair<class_std::basic_string<wchar_t,struct_std::char_traits<wchar_t>,class_std::allocator<wchar_t>_>_const_,class_std::shared_ptr<class_CAnomalyEvent>_>_>_>,struct_std::_Iterator_base0>,class_std::_List_unchecked_const_iterator<class_std::_List_val<struct_std::_List_simple_types<struct_std::pair<class_std::basic_string<wchar_t,struct_std::char_traits<wchar_t>,class_std::allocator<wchar_t>_>_const_,class_std::shared_ptr<class_CAnomalyEvent>_>_>_>,struct_std::_Iterator_base0>_> {
  node [shape="box"];
  graph [splines=ortho];
  BB75aba0cbc -> BB75aba0d89 [color="green"];
  BB75aba0cbc -> BB75aba0cc5 [color="red"];
  BB75aba0cc5 -> BB75aba0d2f [color="green"];
  BB75aba0cc5 -> BB75aba0cf6 [color="red"];
  BB75aba0cf6 -> BB75aba0d1e [color="red"];
  BB75aba0d1e -> BB75aba0d2f [color="blue"];
  BB75aba0d2f -> BB75aba0d6a [color="green"];
  BB75aba0d2f -> BB75aba0d34 [color="red"];
  BB75aba0d34 -> BB75aba0d1e [color="blue"];
  BB75aba0d6a -> BB75aba0d89 [color="red"];
}