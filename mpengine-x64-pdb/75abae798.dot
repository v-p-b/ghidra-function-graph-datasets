digraph ~_Hash<class_std::_Umap_traits<struct_PersistentProcessID,class_std::unordered_map<class_std::basic_string<wchar_t,struct_std::char_traits<wchar_t>,class_std::allocator<wchar_t>_>,struct_ProcessAttributes::ProcessAttributesMap::Attributes,struct_std::hash<class_std::basic_string<wchar_t,struct_std::char_traits<wchar_t>,class_std::allocator<wchar_t>_>_>,struct_std::equal_to<class_std::basic_string<wchar_t,struct_std::char_traits<wchar_t>,class_std::allocator<wchar_t>_>_>,class_std::allocator<struct_std::pair<class_std::basic_string<wchar_t,struct_std::char_traits<wchar_t>,class_std::allocator<wchar_t>_>_const_,struct_ProcessAttributes::ProcessAttributesMap::Attributes>_>_>,class_std::_Uhash_compare<struct_PersistentProcessID,struct_std::hash<struct_PersistentProcessID>,struct_std::equal_to<struct_PersistentProcessID>_>,class_std::allocator<struct_std::pair<struct_PersistentProcessID_const_,class_std::unordered_map<class_std::basic_string<wchar_t,struct_std::char_traits<wchar_t>,class_std::allocator<wchar_t>_>,struct_ProcessAttributes::ProcessAttributesMap::Attributes,struct_std::hash<class_std::basic_string<wchar_t,struct_std::char_traits<wchar_t>,class_std::allocator<wchar_t>_>_>,struct_std::equal_to<class_std::basic_string<wchar_t,struct_std::char_traits<wchar_t>,class_std::allocator<wchar_t>_>_>,class_std::allocator<struct_std::pair<class_std::basic_string<wchar_t,struct_std::char_traits<wchar_t>,class_std::allocator<wchar_t>_>_const_,struct_ProcessAttributes::ProcessAttributesMap::Attributes>_>_>_>_>,0>_> {
  node [shape="box"];
  graph [splines=ortho];
  BB75abae798 -> BB75abae7c9 [color="green"];
  BB75abae798 -> BB75abae7aa [color="red"];
  BB75abae7aa -> BB75abae7c9 [color="red"];
}