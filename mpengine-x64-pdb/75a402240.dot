digraph copy_if<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<rolling_queue_entry>_>_>,std::back_insert_iterator<std::vector<rolling_queue_entry,std::allocator<rolling_queue_entry>_>_>,<lambda_386539fce871cfffdad704ad691d0cf9>_> {
  node [shape="box"];
  graph [splines=ortho];
  BB75a402240 -> BB75a40226e [color="green"];
  BB75a402240 -> BB75a40226b [color="red"];
  BB75a40226b -> BB75a40226e [color="blue"];
  BB75a40226e -> BB75a402272 [color="blue"];
  BB75a402272 -> BB75a4022d5 [color="green"];
  BB75a402272 -> BB75a402277 [color="red"];
  BB75a402277 -> BB75a4022d0 [color="green"];
  BB75a402277 -> BB75a402297 [color="red"];
  BB75a402297 -> BB75a4022c5 [color="green"];
  BB75a402297 -> BB75a4022b3 [color="red"];
  BB75a4022b3 -> BB75a4022d0 [color="blue"];
  BB75a4022c5 -> BB75a4022d0 [color="red"];
  BB75a4022d0 -> BB75a402272 [color="blue"];
}