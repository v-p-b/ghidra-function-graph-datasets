digraph ~unique_ptr<class_std::map<class_std::basic_string<wchar_t,struct_std::char_traits<wchar_t>,class_std::allocator<wchar_t>_>,class_std::shared_ptr<class_VmProcessProtection::VmProcessProtectionInfo>,struct_StringCompare,class_std::allocator<struct_std::pair<class_std::basic_string<wchar_t,struct_std::char_traits<wchar_t>,class_std::allocator<wchar_t>_>_const_,class_std::shared_ptr<class_VmProcessProtection::VmProcessProtectionInfo>_>_>_>,struct_std::default_delete<class_std::map<class_std::basic_string<wchar_t,struct_std::char_traits<wchar_t>,class_std::allocator<wchar_t>_>,class_std::shared_ptr<class_VmProcessProtection::VmProcessProtectionInfo>,struct_StringCompare,class_std::allocator<struct_std::pair<class_std::basic_string<wchar_t,struct_std::char_traits<wchar_t>,class_std::allocator<wchar_t>_>_const_,class_std::shared_ptr<class_VmProcessProtection::VmProcessProtectionInfo>_>_>_>_>_> {
  node [shape="box"];
  graph [splines=ortho];
  BB75a76b578 -> BB75a76b589 [color="green"];
  BB75a76b578 -> BB75a76b584 [color="red"];
  BB75a76b584 -> BB75a76b589 [color="red"];
}