digraph _Tree_temp_node<std::allocator<std::_Tree_node<std::pair<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>_>_const_,AttributePersistContext::`anonymous_namespace'::RawExtendedContext2>,void_*>_>_><std::piecewise_construct_t_const_&,std::tuple<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>_>_const_&>,std::tuple<>_> {
  node [shape="box"];
  graph [splines=ortho];
  BB75a7e31dc -> BB75a7e325a [color="red"];
  BB75a7e325a -> BB75a7e325a [color="green"];
  BB75a7e325a -> BB75a7e326c [color="red"];
}