digraph ~copy_map<struct_boost::multi_index::detail::sequenced_index_node<struct_boost::multi_index::detail::ordered_index_node<struct_boost::multi_index::detail::null_augment_policy,struct_boost::multi_index::detail::index_node_base<struct_std::pair<class_std::basic_string<char,struct_std::char_traits<char>,class_std::allocator<char>_>_const_,class_boost::property_tree::basic_ptree<class_std::basic_string<char,struct_std::char_traits<char>,class_std::allocator<char>_>,class_std::basic_string<char,struct_std::char_traits<char>,class_std::allocator<char>_>,struct_std::less<class_std::basic_string<char,struct_std::char_traits<char>,class_std::allocator<char>_>_>_>_>,class_std::allocator<struct_std::pair<class_std::basic_string<char,struct_std::char_traits<char>,class_std::allocator<char>_>_const_,class_boost::property_tree::basic_ptree<class_std::basic_string<char,struct_std::char_traits<char>,class_std::allocator<char>_>,class_std::basic_string<char,struct_std::char_traits<char>,class_std::allocator<char>_>,struct_std::less<class_std::basic_string<char,struct_std::char_traits<char>,class_std::allocator<char>_>_>_>_>_>_>_>_>,class_std::allocator<struct_std::pair<class_std::basic_string<char,struct_std::char_traits<char>,class_std::allocator<char>_>_const_,class_boost::property_tree::basic_ptree<class_std::basic_string<char,struct_std::char_traits<char>,class_std::allocator<char>_>,class_std::basic_string<char,struct_std::char_traits<char>,class_std::allocator<char>_>,struct_std::less<class_std::basic_string<char,struct_std::char_traits<char>,class_std::allocator<char>_>_>_>_>_>_> {
  node [shape="box"];
  graph [splines=ortho];
  BB75a15a174 -> BB75a15a1a6 [color="green"];
  BB75a15a174 -> BB75a15a18e [color="red"];
  BB75a15a1a6 -> BB75a15a18e [color="green"];
  BB75a15a1a6 -> BB75a15a1ac [color="red"];
  BB75a15a1ac -> BB75a15a1af [color="blue"];
  BB75a15a1af -> BB75a15a1af [color="green"];
  BB75a15a1af -> BB75a15a1dd [color="red"];
  BB75a15a1dd -> BB75a15a18e [color="blue"];
}