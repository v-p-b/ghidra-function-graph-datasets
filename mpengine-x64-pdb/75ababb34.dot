digraph transform<std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<rolling_queue_entry>_>_>,std::insert_iterator<std::set<std::basic_string<char,std::char_traits<char>,std::allocator<char>_>,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char>_>_>,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char>_>_>_>_>,<lambda_2e1389f04abe4f7493a2e0cb09121a47>_> {
  node [shape="box"];
  graph [splines=ortho];
  BB75ababb34 -> BB75ababb63 [color="green"];
  BB75ababb34 -> BB75ababb60 [color="red"];
  BB75ababb60 -> BB75ababb63 [color="blue"];
  BB75ababb63 -> BB75ababb71 [color="blue"];
  BB75ababb71 -> BB75ababbc6 [color="green"];
  BB75ababb71 -> BB75ababb76 [color="red"];
  BB75ababb76 -> BB75ababb71 [color="blue"];
}