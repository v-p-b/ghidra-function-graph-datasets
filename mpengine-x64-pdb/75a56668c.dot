digraph for_each<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned___int64_const_,MutableStore::MutableByteStream_*>_>_>_>,<lambda_231340998211b573da50e85f937ca510>_> {
  node [shape="box"];
  graph [splines=ortho];
  BB75a56668c -> BB75a5666a4 [color="blue"];
  BB75a5666a4 -> BB75a5666d9 [color="green"];
  BB75a5666a4 -> BB75a5666a9 [color="red"];
  BB75a5666a9 -> BB75a56670a [color="green"];
  BB75a5666a9 -> BB75a5666b2 [color="red"];
  BB75a5666b2 -> BB75a5666ec [color="green"];
  BB75a5666b2 -> BB75a5666bc [color="red"];
  BB75a5666bc -> BB75a5666a4 [color="green"];
  BB75a5666bc -> BB75a5666c8 [color="red"];
  BB75a5666c8 -> BB75a5666c8 [color="green"];
  BB75a5666c8 -> BB75a5666d7 [color="red"];
  BB75a5666d7 -> BB75a5666a4 [color="blue"];
  BB75a5666ec -> BB75a5666f0 [color="blue"];
  BB75a5666f0 -> BB75a566705 [color="green"];
  BB75a5666f0 -> BB75a5666f6 [color="red"];
  BB75a5666f6 -> BB75a566705 [color="green"];
  BB75a5666f6 -> BB75a5666fc [color="red"];
  BB75a5666fc -> BB75a5666f0 [color="blue"];
  BB75a566705 -> BB75a5666a4 [color="blue"];
  BB75a56670a -> BB75a5666b2 [color="blue"];
}