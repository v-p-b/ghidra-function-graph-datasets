digraph regex_replace<class_boost::re_detail_500::string_out_iterator<class_std::basic_string<wchar_t,struct_std::char_traits<wchar_t>,class_std::allocator<wchar_t>_>_>,class_std::_String_const_iterator<class_std::_String_val<struct_std::_Simple_types<wchar_t>_>_>,struct_boost::regex_traits<wchar_t,class_boost::w32_regex_traits<wchar_t>_>,wchar_t,class_std::basic_string<wchar_t,struct_std::char_traits<wchar_t>,class_std::allocator<wchar_t>_>_> {
  node [shape="box"];
  graph [splines=ortho];
  BB75aad4880 -> BB75aad48fe [color="green"];
  BB75aad4880 -> BB75aad48f5 [color="red"];
  BB75aad48f5 -> BB75aad49b5 [color="blue"];
  BB75aad48fe -> BB75aad49b1 [color="green"];
  BB75aad48fe -> BB75aad4913 [color="red"];
  BB75aad4913 -> BB75aad49ab [color="green"];
  BB75aad4913 -> BB75aad495b [color="red"];
  BB75aad495b -> BB75aad4974 [color="green"];
  BB75aad495b -> BB75aad4971 [color="red"];
  BB75aad4971 -> BB75aad4974 [color="blue"];
  BB75aad4974 -> BB75aad48fe [color="blue"];
  BB75aad49ab -> BB75aad49b1 [color="red"];
  BB75aad49b1 -> BB75aad49b5 [color="blue"];
  BB75aad49b5 -> BB75aad49d8 [color="green"];
  BB75aad49b5 -> BB75aad49d2 [color="red"];
  BB75aad49d2 -> BB75aad49d8 [color="red"];
}