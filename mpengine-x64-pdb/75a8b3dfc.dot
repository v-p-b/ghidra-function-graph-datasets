digraph have<class_boost::property_tree::json_parser::detail::number_callback_adapter<class_boost::property_tree::json_parser::detail::standard_callbacks<class_boost::property_tree::basic_ptree<class_std::basic_string<char,struct_std::char_traits<char>,class_std::allocator<char>_>,class_std::basic_string<char,struct_std::char_traits<char>,class_std::allocator<char>_>,struct_std::less<class_std::basic_string<char,struct_std::char_traits<char>,class_std::allocator<char>_>_>_>_>,struct_boost::property_tree::json_parser::detail::encoding<char>,class_std::istreambuf_iterator<char,struct_std::char_traits<char>_>,struct_std::input_iterator_tag>_> {
  node [shape="box"];
  graph [splines=ortho];
  BB75a8b3dfc -> BB75a8b3e96 [color="green"];
  BB75a8b3dfc -> BB75a8b3e32 [color="red"];
  BB75a8b3e32 -> BB75a8b3e96 [color="green"];
  BB75a8b3e32 -> BB75a8b3e4e [color="red"];
  BB75a8b3e4e -> BB75a8b3e6d [color="green"];
  BB75a8b3e4e -> BB75a8b3e61 [color="red"];
  BB75a8b3e61 -> BB75a8b3e6d [color="red"];
  BB75a8b3e6d -> BB75a8b3e80 [color="green"];
  BB75a8b3e6d -> BB75a8b3e7a [color="red"];
  BB75a8b3e7a -> BB75a8b3e84 [color="blue"];
  BB75a8b3e80 -> BB75a8b3e84 [color="blue"];
  BB75a8b3e84 -> BB75a8b3e98 [color="blue"];
  BB75a8b3e96 -> BB75a8b3e98 [color="blue"];
}