digraph ~_Hash<class_std::_Umap_traits<wchar_t_const*___ptr64,class_CommonUtil::AutoRefWrapper<struct_ResourcesProperties::PropertyContainer>,class_std::_Uhash_compare<wchar_t_const*___ptr64,struct_CommonUtil::CStdHashMapCompare<wchar_t_const*___ptr64,struct_CommonUtil::CStdRefHashMapAdapter<wchar_t_const*___ptr64,struct_ResourcesProperties::PropertyContainer,struct_CommonUtil::CStdWideStringNoCaseCompareEqual>::CPolicy>,struct_CommonUtil::CStdHashMapCompare<wchar_t_const*___ptr64,struct_CommonUtil::CStdRefHashMapAdapter<wchar_t_const*___ptr64,struct_ResourcesProperties::PropertyContainer,struct_CommonUtil::CStdWideStringNoCaseCompareEqual>::CPolicy>_>,class_std::allocator<struct_std::pair<wchar_t_const*___ptr64_const,class_CommonUtil::AutoRefWrapper<struct_ResourcesProperties::PropertyContainer>_>_>,0>_> {
  node [shape="box"];
  graph [splines=ortho];
  BB75a40a93c -> BB75a40a96d [color="green"];
  BB75a40a93c -> BB75a40a94e [color="red"];
  BB75a40a94e -> BB75a40a96d [color="red"];
}