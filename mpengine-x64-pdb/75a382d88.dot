digraph _Copy_unchecked<class_std::_Tree_unchecked_const_iterator<class_std::_Tree_val<struct_std::_Tree_simple_types<class_std::basic_string<wchar_t,struct_std::char_traits<wchar_t>,class_std::allocator<wchar_t>_>_>_>,struct_std::_Iterator_base0>,class_std::_Tree_unchecked_const_iterator<class_std::_Tree_val<struct_std::_Tree_simple_types<class_std::basic_string<wchar_t,struct_std::char_traits<wchar_t>,class_std::allocator<wchar_t>_>_>_>,struct_std::_Iterator_base0>,class_std::back_insert_iterator<class_std::vector<class_std::filesystem::path,class_std::allocator<class_std::filesystem::path>_>_>_> {
  node [shape="box"];
  graph [splines=ortho];
  BB75a382d88 -> BB75a382dbc [color="blue"];
  BB75a382dbc -> BB75a382e18 [color="green"];
  BB75a382dbc -> BB75a382dc1 [color="red"];
  BB75a382dc1 -> BB75a382dd3 [color="green"];
  BB75a382dc1 -> BB75a382dd0 [color="red"];
  BB75a382dd0 -> BB75a382dd3 [color="blue"];
  BB75a382dd3 -> BB75a382e3f [color="green"];
  BB75a382dd3 -> BB75a382df3 [color="red"];
  BB75a382df3 -> BB75a382e00 [color="red"];
  BB75a382e00 -> BB75a382dbc [color="blue"];
  BB75a382e3f -> BB75a382e00 [color="blue"];
}