digraph adjacent_find<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<ImportInfo>_>_>,`anonymous_namespace'::ImportOverlap> {
  node [shape="box"];
  graph [splines=ortho];
  BB75a48b540 -> BB75a48b58b [color="green"];
  BB75a48b540 -> BB75a48b56a [color="red"];
  BB75a48b58b -> BB75a48b58e [color="blue"];
  BB75a48b58e -> BB75a48b56a [color="green"];
  BB75a48b58e -> BB75a48b597 [color="red"];
  BB75a48b597 -> BB75a48b5b7 [color="green"];
  BB75a48b597 -> BB75a48b59f [color="red"];
  BB75a48b59f -> BB75a48b5b2 [color="green"];
  BB75a48b59f -> BB75a48b5ad [color="red"];
  BB75a48b5ad -> BB75a48b58e [color="blue"];
  BB75a48b5b2 -> BB75a48b56a [color="blue"];
  BB75a48b5b7 -> BB75a48b59f [color="blue"];
}