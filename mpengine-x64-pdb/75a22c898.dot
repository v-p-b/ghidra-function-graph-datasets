digraph find_if<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>_>_>_>_>,<lambda_63e43a8725215cc2c3bfa7963c36cec4>_> {
  node [shape="box"];
  graph [splines=ortho];
  BB75a22c898 -> BB75a22c8e0 [color="green"];
  BB75a22c898 -> BB75a22c8be [color="red"];
  BB75a22c8be -> BB75a22c8cb [color="green"];
  BB75a22c8be -> BB75a22c8c8 [color="red"];
  BB75a22c8c8 -> BB75a22c8cb [color="blue"];
  BB75a22c8cb -> BB75a22c8e0 [color="green"];
  BB75a22c8cb -> BB75a22c8d7 [color="red"];
  BB75a22c8d7 -> BB75a22c8be [color="green"];
  BB75a22c8d7 -> BB75a22c8e0 [color="red"];
}