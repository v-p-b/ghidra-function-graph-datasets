digraph construct<struct_LogSkipEntry,class_std::basic_string<wchar_t,struct_std::char_traits<wchar_t>,class_std::allocator<wchar_t>_>,class_std::basic_string<wchar_t,struct_std::char_traits<wchar_t>,class_std::allocator<wchar_t>_>&___ptr64,class_std::basic_string<wchar_t,struct_std::char_traits<wchar_t>,class_std::allocator<wchar_t>_>&___ptr64,unsigned_short&___ptr64,unsigned_long&___ptr64,unsigned_long&___ptr64,unsigned_long&___ptr64,bool&___ptr64,bool&___ptr64,bool&___ptr64> {
  node [shape="box"];
  graph [splines=ortho];
}