digraph _decode_multi_cpu<class_std::vector<class_std::vector<unsigned___int64,class_std::allocator<unsigned___int64>_>*___ptr64,class_std::allocator<class_std::vector<unsigned___int64,class_std::allocator<unsigned___int64>_>*___ptr64>_>,class_std::_Binder<struct_std::_Unforced,enum_tdt_status__(__cdecl_tdt::pt_decode_common::*)(unsigned_char_const*___ptr64,unsigned___int64,class_std::vector<unsigned___int64,class_std::allocator<unsigned___int64>_>&___ptr64,bool_const&___ptr64)___ptr64,class_tdt::pt_decode_cpu_multi*___ptr64,struct_std::_Ph<1>_const&___ptr64,struct_std::_Ph<2>_const&___ptr64,struct_std::_Ph<3>_const&___ptr64,struct_std::_Ph<4>_const&___ptr64>_> {
  node [shape="box"];
  graph [splines=ortho];
  BB75aceae4c -> BB75aceae8e [color="green"];
  BB75aceae4c -> BB75aceae87 [color="red"];
  BB75aceae87 -> BB75aceaf04 [color="blue"];
  BB75aceae8e -> BB75aceaf04 [color="green"];
  BB75aceae8e -> BB75aceae9f [color="red"];
  BB75aceae9f -> BB75aceaf04 [color="green"];
  BB75aceae9f -> BB75aceaef7 [color="red"];
  BB75aceaef7 -> BB75aceaf04 [color="red"];
}