digraph format<class_std::back_insert_iterator<class_std::vector<unsigned_char,class_std::allocator<unsigned_char>_>_>,class_std::basic_string<char,struct_std::char_traits<char>,class_std::allocator<char>_>,class_boost::basic_regex<char,struct_boost::regex_traits<char,class_boost::w32_regex_traits<char>_>_>_> {
  node [shape="box"];
  graph [splines=ortho];
  BB75acc8b34 -> BB75acc8b70 [color="green"];
  BB75acc8b34 -> BB75acc8b6a [color="red"];
  BB75acc8b70 -> BB75acc8b88 [color="green"];
  BB75acc8b70 -> BB75acc8b85 [color="red"];
  BB75acc8b85 -> BB75acc8b88 [color="blue"];
  BB75acc8b88 -> BB75acc8b9c [color="green"];
  BB75acc8b88 -> BB75acc8b99 [color="red"];
  BB75acc8b99 -> BB75acc8b9c [color="blue"];
}