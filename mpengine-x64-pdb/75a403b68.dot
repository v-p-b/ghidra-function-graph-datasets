digraph _Free_non_head<class_std::allocator<struct_std::_List_node<struct_std::pair<class_std::basic_string<char,struct_std::char_traits<char>,class_std::allocator<char>_>_const_,class_std::shared_ptr<class_boost::property_tree::basic_ptree<class_std::basic_string<char,struct_std::char_traits<char>,class_std::allocator<char>_>,class_std::basic_string<char,struct_std::char_traits<char>,class_std::allocator<char>_>,struct_std::less<class_std::basic_string<char,struct_std::char_traits<char>,class_std::allocator<char>_>_>_>_>_>,void*___ptr64>_>_> {
  node [shape="box"];
  graph [splines=ortho];
  BB75a403b68 -> BB75a403b8e [color="green"];
  BB75a403b68 -> BB75a403b7e [color="red"];
  BB75a403b7e -> BB75a403b7e [color="green"];
  BB75a403b7e -> BB75a403b8e [color="red"];
}