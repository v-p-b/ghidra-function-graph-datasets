digraph _Tree_temp_node<class_std::allocator<struct_std::_Tree_node<struct_std::pair<class_std::basic_string<char,struct_std::char_traits<char>,class_std::allocator<char>_>_const_,class_std::vector<class_std::basic_string<char,struct_std::char_traits<char>,class_std::allocator<char>_>,class_std::allocator<class_std::basic_string<char,struct_std::char_traits<char>,class_std::allocator<char>_>_>_>_>,void*___ptr64>_>_><struct_std::piecewise_construct_t_const&___ptr64,class_std::tuple<class_std::basic_string<char,struct_std::char_traits<char>,class_std::allocator<char>_>_const&___ptr64>,class_std::tuple<>_> {
  node [shape="box"];
  graph [splines=ortho];
  BB75a8cb60c -> BB75a8cb67d [color="red"];
  BB75a8cb67d -> BB75a8cb67d [color="green"];
  BB75a8cb67d -> BB75a8cb68f [color="red"];
}