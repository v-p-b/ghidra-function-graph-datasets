digraph _Tree_temp_node<class_std::allocator<struct_std::_Tree_node<struct_std::pair<class_std::basic_string<wchar_t,struct_std::char_traits<wchar_t>,class_std::allocator<wchar_t>_>_const_,class_std::basic_string<char16_t,struct_std::char_traits<char16_t>,class_std::allocator<char16_t>_>_>,void*___ptr64>_>_><struct_std::piecewise_construct_t_const&___ptr64,class_std::tuple<class_std::basic_string<wchar_t,struct_std::char_traits<wchar_t>,class_std::allocator<wchar_t>_>&&___ptr64>,class_std::tuple<class_std::basic_string<char16_t,struct_std::char_traits<char16_t>,class_std::allocator<char16_t>_>&&___ptr64>_> {
  node [shape="box"];
  graph [splines=ortho];
  BB75aceee40 -> BB75aceeef6 [color="red"];
  BB75aceeef6 -> BB75aceeef6 [color="green"];
  BB75aceeef6 -> BB75aceef08 [color="red"];
}