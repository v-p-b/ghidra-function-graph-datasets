digraph _decode_single_cpu<class_std::vector<class_std::vector<struct_tdt_control_flow_freq_,class_std::allocator<struct_tdt_control_flow_freq_>_>*___ptr64,class_std::allocator<class_std::vector<struct_tdt_control_flow_freq_,class_std::allocator<struct_tdt_control_flow_freq_>_>*___ptr64>_>,class_std::_Binder<struct_std::_Unforced,enum_tdt_status__(__cdecl_tdt::pt_decode_common::*)(unsigned_char_const*___ptr64,unsigned___int64,class_std::vector<struct_tdt_control_flow_freq_,class_std::allocator<struct_tdt_control_flow_freq_>_>&___ptr64,bool_const&___ptr64)___ptr64,class_tdt::pt_decode_cpu*___ptr64,struct_std::_Ph<1>_const&___ptr64,struct_std::_Ph<2>_const&___ptr64,struct_std::_Ph<3>_const&___ptr64,struct_std::_Ph<4>_const&___ptr64>_> {
  node [shape="box"];
  graph [splines=ortho];
  BB75aced374 -> BB75aced3b6 [color="green"];
  BB75aced374 -> BB75aced3af [color="red"];
  BB75aced3af -> BB75aced424 [color="blue"];
  BB75aced3b6 -> BB75aced424 [color="green"];
  BB75aced3b6 -> BB75aced3c7 [color="red"];
  BB75aced3c7 -> BB75aced424 [color="green"];
  BB75aced3c7 -> BB75aced417 [color="red"];
  BB75aced417 -> BB75aced424 [color="red"];
}