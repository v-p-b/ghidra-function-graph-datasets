digraph CStdHashMap<wchar_t_const*___ptr64,class_CommonUtil::AutoRefWrapper<class_AttributeValueStore>,struct_CommonUtil::CStdHashMapCompare<wchar_t_const*___ptr64,struct_CommonUtil::CStdRefHashMapAdapter<wchar_t_const*___ptr64,class_AttributeValueStore,struct_CommonUtil::CStdWideStringCompareEqual>::CPolicy>,struct_CommonUtil::CStdHashMapCompare<wchar_t_const*___ptr64,struct_CommonUtil::CStdRefHashMapAdapter<wchar_t_const*___ptr64,class_AttributeValueStore,struct_CommonUtil::CStdWideStringCompareEqual>::CPolicy>,class_std::allocator<struct_std::pair<wchar_t_const*___ptr64_const,class_CommonUtil::AutoRefWrapper<class_AttributeValueStore>_>_>_> {
  node [shape="box"];
  graph [splines=ortho];
}