digraph ~CStdPtrContainerAssoc<class_CommonUtil::CStdHashMap<class_std::basic_string<wchar_t,struct_std::char_traits<wchar_t>,class_std::allocator<wchar_t>_>,class_std::vector<struct_InternalAttributeKeyValuePair,class_std::allocator<struct_InternalAttributeKeyValuePair>_>*___ptr64,struct_CommonUtil::CStdHashMapCompare<class_std::basic_string<wchar_t,struct_std::char_traits<wchar_t>,class_std::allocator<wchar_t>_>,struct_CommonUtil::CStdDefaultCompare<class_std::basic_string<wchar_t,struct_std::char_traits<wchar_t>,class_std::allocator<wchar_t>_>,struct_std::hash<class_std::basic_string<wchar_t,struct_std::char_traits<wchar_t>,class_std::allocator<wchar_t>_>_>_>_>,struct_CommonUtil::CStdHashMapCompare<class_std::basic_string<wchar_t,struct_std::char_traits<wchar_t>,class_std::allocator<wchar_t>_>,struct_CommonUtil::CStdDefaultCompare<class_std::basic_string<wchar_t,struct_std::char_traits<wchar_t>,class_std::allocator<wchar_t>_>,struct_std::hash<class_std::basic_string<wchar_t,struct_std::char_traits<wchar_t>,class_std::allocator<wchar_t>_>_>_>_>,class_std::allocator<struct_std::pair<class_std::basic_string<wchar_t,struct_std::char_traits<wchar_t>,class_std::allocator<wchar_t>_>_const_,class_std::vector<struct_InternalAttributeKeyValuePair,class_std::allocator<struct_InternalAttributeKeyValuePair>_>*___ptr64>_>_>,class_CommonUtil::CAutoUniquePtr<class_std::vector<struct_InternalAttributeKeyValuePair,class_std::allocator<struct_InternalAttributeKeyValuePair>_>,void>_> {
  node [shape="box"];
  graph [splines=ortho];
}