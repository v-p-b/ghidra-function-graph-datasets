digraph iter_split<class_std::vector<class_std::basic_string<char,struct_std::char_traits<char>,class_std::allocator<char>_>,class_std::allocator<class_std::basic_string<char,struct_std::char_traits<char>,class_std::allocator<char>_>_>_>,class_std::basic_string<char,struct_std::char_traits<char>,class_std::allocator<char>_>&___ptr64,struct_boost::algorithm::detail::token_finderF<struct_boost::algorithm::detail::is_any_ofF<char>_>_> {
  node [shape="box"];
  graph [splines=ortho];
  BB75a8c6924 -> BB75a8c69cb [color="green"];
  BB75a8c6924 -> BB75a8c69c0 [color="red"];
  BB75a8c69c0 -> BB75a8c69cb [color="red"];
}