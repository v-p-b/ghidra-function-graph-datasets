digraph ~_Hash_vec<class_std::allocator<class_std::_List_unchecked_iterator<class_std::_List_val<struct_std::_List_simple_types<struct_std::pair<class_std::basic_string<char,struct_std::char_traits<char>,class_std::allocator<char>_>_const_,class_std::unordered_map<class_std::basic_string<char,struct_std::char_traits<char>,class_std::allocator<char>_>,struct_rolling_queue,struct_std::hash<class_std::basic_string<char,struct_std::char_traits<char>,class_std::allocator<char>_>_>,struct_std::equal_to<class_std::basic_string<char,struct_std::char_traits<char>,class_std::allocator<char>_>_>,class_std::allocator<struct_std::pair<class_std::basic_string<char,struct_std::char_traits<char>,class_std::allocator<char>_>_const_,struct_rolling_queue>_>_>_>_>_>_>_>_> {
  node [shape="box"];
  graph [splines=ortho];
  BB75a5b3c88 -> BB75a5b3c9f [color="green"];
  BB75a5b3c88 -> BB75a5b3c99 [color="red"];
  BB75a5b3c9f -> BB75a5b3c99 [color="blue"];
}