digraph _Hash<class_std::_Umap_traits<wchar_t_const*___ptr64,class_CommonUtil::AutoRefWrapper<class_MetadataValueStore>,class_std::_Uhash_compare<wchar_t_const*___ptr64,struct_CommonUtil::CStdHashMapCompare<wchar_t_const*___ptr64,struct_CommonUtil::CStdRefHashMapAdapter<wchar_t_const*___ptr64,class_MetadataValueStore,struct_CommonUtil::CStdWideStringNoCaseCompareEqual>::CPolicy>,struct_CommonUtil::CStdHashMapCompare<wchar_t_const*___ptr64,struct_CommonUtil::CStdRefHashMapAdapter<wchar_t_const*___ptr64,class_MetadataValueStore,struct_CommonUtil::CStdWideStringNoCaseCompareEqual>::CPolicy>_>,class_std::allocator<struct_std::pair<wchar_t_const*___ptr64_const,class_CommonUtil::AutoRefWrapper<class_MetadataValueStore>_>_>,0>_> {
  node [shape="box"];
  graph [splines=ortho];
}